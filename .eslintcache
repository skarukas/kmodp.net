[{"/Users/skarukas/Box Sync/CS/Website/new website/website/src/index.js":"1","/Users/skarukas/Box Sync/CS/Website/new website/website/src/App.js":"2","/Users/skarukas/Box Sync/CS/Website/new website/website/src/reportWebVitals.js":"3","/Users/skarukas/Box Sync/CS/Website/new website/website/src/pages/Home.js":"4","/Users/skarukas/Box Sync/CS/Website/new website/website/src/pages/News.js":"5","/Users/skarukas/Box Sync/CS/Website/new website/website/src/pages/About.js":"6","/Users/skarukas/Box Sync/CS/Website/new website/website/src/pages/Project.js":"7","/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/SearchBar.js":"8","/Users/skarukas/Box Sync/CS/Website/new website/website/src/data/tech-projects.js":"9","/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/NavigationBar.js":"10","/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/SocialContainer.js":"11","/Users/skarukas/Box Sync/CS/Website/new website/website/src/pages/Works.js":"12","/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/Purchase.js":"13","/Users/skarukas/Box Sync/CS/Website/new website/website/src/data/works.js":"14","/Users/skarukas/Box Sync/CS/Website/new website/website/src/data/news.js":"15","/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/Loader.js":"16","/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/AudioPlayer.js":"17"},{"size":500,"mtime":1609730330730,"results":"18","hashOfConfig":"19"},{"size":2025,"mtime":1610559850112,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1609730330732,"results":"21","hashOfConfig":"19"},{"size":2789,"mtime":1609876823026,"results":"22","hashOfConfig":"19"},{"size":4440,"mtime":1610570230281,"results":"23","hashOfConfig":"19"},{"size":5966,"mtime":1609876785363,"results":"24","hashOfConfig":"19"},{"size":2066,"mtime":1609876799397,"results":"25","hashOfConfig":"19"},{"size":600,"mtime":1609978900449,"results":"26","hashOfConfig":"19"},{"size":2408,"mtime":1609799921777,"results":"27","hashOfConfig":"19"},{"size":1382,"mtime":1609876426753,"results":"28","hashOfConfig":"19"},{"size":1049,"mtime":1610578679758,"results":"29","hashOfConfig":"19"},{"size":6641,"mtime":1610563818943,"results":"30","hashOfConfig":"19"},{"size":4653,"mtime":1610558787558,"results":"31","hashOfConfig":"19"},{"size":13270,"mtime":1610558707787,"results":"32","hashOfConfig":"19"},{"size":9314,"mtime":1610577781412,"results":"33","hashOfConfig":"19"},{"size":470,"mtime":1609815615202,"results":"34","hashOfConfig":"19"},{"size":201,"mtime":1610563832945,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"ddxqmd",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/skarukas/Box Sync/CS/Website/new website/website/src/index.js",[],["74","75"],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/App.js",["76"],"import React from \"react\";\nimport { HashRouter, Route } from 'react-router-dom';\nimport $ from \"jquery\"\n\nimport HomePage from \"./pages/Home\"\nimport AboutPage from \"./pages/About\"\nimport NewsPage from \"./pages/News\"\nimport ProjectsPage from \"./pages/Project\"\nimport WorksPage from \"./pages/Works\"\n\nimport NavigationBar from \"./components/NavigationBar\"\nimport SocialContainer from \"./components/SocialContainer\"\n\nimport './style/App.css'\n\nfunction Page(name, path, component) {\n    this.name = name;\n    this.path = path;\n    this.component = component\n}\n\nconst pages = [\n    /* new Page(\"home\",  \"/home\",  HomePage), */\n    new Page(\"code\",  \"/code\",  ProjectsPage),\n    new Page(\"works\", \"/works\", WorksPage),\n    new Page(\"news\",  \"/news\",  NewsPage),\n    new Page(\"about\", \"/about\", AboutPage),\n]\nconst InitialPage = AboutPage\n\n\n\nwindow.updateURLParams = function(paramObj) {\n    let params = window.getURLParams()\n    for (let [key, value] of Object.entries(paramObj)) params.set(key, value)\n    let baseUrl = window.location.href.split(\"?\")[0]\n    let url = baseUrl + \"?\" + params\n    window.location.replace(url)\n}\n\nwindow.getURLParam = function(key) {\n    return window.getURLParams().get(key)\n}\n\nwindow.getURLParams = function() {\n    return new URLSearchParams(window.location.href.split(\"?\")[1])\n}\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        $('#background').css('background-image', 'url(\"img/site-background.jpg\")')\n    }\n\n    render() {\n        return (\n            <HashRouter basename='/'>\n                <div id=\"background\"></div>\n                <NavigationBar pages={pages} selected={InitialPage}/>\n                <SocialContainer />\n                <div id=\"content\">\n                    <Route exact path=\"/\" component={InitialPage}/>\n                    {pages.map(page => <Route path={page.path} key={page.name} component={page.component} />)}\n                </div>\n                <div id=\"footer\"></div>\n            </HashRouter>\n        )\n    }\n}\n\nexport default App;\n","/Users/skarukas/Box Sync/CS/Website/new website/website/src/reportWebVitals.js",[],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/pages/Home.js",[],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/pages/News.js",["77"],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/pages/About.js",[],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/pages/Project.js",[],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/SearchBar.js",[],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/data/tech-projects.js",[],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/NavigationBar.js",[],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/SocialContainer.js",[],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/pages/Works.js",["78"],"import React from \"react\"\nimport $ from \"jquery\"\n\nimport PurchaseModal from \"../components/Purchase\";\nimport SearchBar from \"../components/SearchBar\";\nimport AudioPlayer from \"../components/AudioPlayer\";\nimport worksData from \"../data/works\"\nimport \"../style/Works.css\"\n\n\nexport default class WorksPage extends React.Component {\n    state = { data: worksData }\n    modalRef = React.createRef()\n\n    componentDidMount() {\n        if (window.getURLParam(\"work-id\")) {\n            setTimeout(() => {\n                // FIX THIS\n                let $queryWork = $(\"#\" + window.getURLParam(\"work-id\"))\n                let offset = $queryWork.offset().top\n                let scrollVal = offset - ($('#navbar').height() + 4)\n                window.scroll({\n                    top: scrollVal,\n                    left: 0, \n                    behavior: 'smooth'\n                });\n            }, 1000)\n        }\n    }\n\n    render() {\n        if (!this.state.data) return this.props.fallback || null\n        else return (\n            <div id=\"works-page\">\n                <SearchBar />\n                <PurchaseModal ref={this.modalRef}/>\n                <div className=\"work-container\">\n                    { \n                        this.state.data.map((work, idx) => {\n                            let showDetails = work.id === window.getURLParam(\"work-id\")\n                            return <Work work={work} key={idx} modalRef={this.modalRef} showDetails={showDetails}/>\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Work extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            show: true,\n            showDetails: props.showDetails,\n            work: props.work\n        }\n        this.containerElement = React.createRef();\n    }\n\n    testQuery(queries) {\n        /* test if the properties contain the query string */\n        let stringified = JSON.stringify(Object.values(this.props.work)).toLowerCase()\n        this.setState({\n            show: queries.every(q => stringified.includes(q.toLowerCase()))\n        })\n    }\n\n    componentDidMount() {\n        /* Show details and scroll to element if it starts off selected */\n        if (this.props.showDetails) this.toggleDetails()\n        \n        $(\"#works-page .search-bar\").on('input', event => {\n            this.testQuery(event.target.value.split(\" \"))\n        }).trigger('input')\n    }\n\n    toggleDetails() {\n        /* Not currently using showDetails state */\n        /* let showDetails = !this.state.showDetails\n        this.setState({ showDetails }) */\n\n        /* Hide all others */\n        $('.work')\n            .not(this.containerElement.current)\n            .removeClass('work-selected')\n            .children(\".toggle-details\")\n            .slideUp(500)\n\n        /* Toggle current */\n        $(this.containerElement.current)\n            .toggleClass('work-selected')\n            .children(\".toggle-details\")\n            .slideToggle(500)\n        \n\n        /* Pause all audio */\n        $('.work')\n            .find('audio')\n            .trigger('pause')\n    }\n\n    render() {\n        let work = this.state.work;\n        if (!work.title) return null\n\n        let iconImage = \"img/expand-down-icon.png\"; /* [\"expand-icon.png\", \"condense-icon.png\"][+this.state.showDetails] */\n        let workYear = work.year? (<span className=\"work-year\">({work.year})</span>) : null\n\n        return (\n            <div ref={this.containerElement}\n                 className=\"work\"\n                 id={work.id}\n                 style={{display: [\"none\", \"initial\"][+this.state.show]}}>\n                \n                <a className=\"show-details-button\" onClick={ø => this.toggleDetails()} href={null}>\n                    <img className=\"transparent-icon\"\n                         alt={\"Expand down icon\"}\n                         src={iconImage} />\n                    <WorkHeader year={workYear} title={work.title} instrumentation={work.instrumentationShort} />\n                </a>\n\n                <div className=\"toggle-details\">\n                    <img className=\"work-cover\" \n                         alt={\"Cover for \" + work.title}\n                         src={\"img/covers/\" + work.image} />\n                    <div>\n                        <div className=\"work-description\"\n                            dangerouslySetInnerHTML={{__html: work.description || '<em>Description coming soon.</em>'}}>\n                        </div>\n                    </div>\n                    <div className=\"work-detail-container\">\n                        <span>\n                            <h4>instruments</h4>\n                            <p>{work.instrumentationLong || work.instrumentationShort}</p>\n                        </span>\n                        <span>\n                            <h4>duration</h4>\n                            <p>{work.duration}</p>\n                        </span>\n                    </div>\n                    <div>\n                        {work.purchase && <PurchaseButton purchase={work.purchase} name={work.id.toUpperCase()} modalRef={this.props.modalRef}/>}\n                        {work.audio && <AudioPlayer src={\"audio/\" + work.audio} />}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction WorkHeader(props) {\n    return (\n        <div className=\"work-header-container\">\n            <h3>\n                <strong>{props.title} </strong>\n                {props.year}\n            </h3>\n            <p>{props.instrumentation}</p>\n        </div>\n    )\n}\n\nfunction PurchaseButton(props) {\n    let buttonText = \"Contact for Score\"\n    let purchaseURL = \"mailto:stephen.karukas@gmail.com\"\n    let onClick = void 0;\n    let purchaseInfo = props.purchase\n\n    if (purchaseInfo.publisher) {\n        if (purchaseInfo.publisher === \"Stephen Karukas\") {\n            /* Sell directly using PayPal */\n            buttonText = `Purchase ($${purchaseInfo.price})`\n            purchaseURL = null\n            onClick = () => {\n                props.modalRef.current.displayItem({\n                    name: props.name,\n                    price: purchaseInfo.price, \n                    note: purchaseInfo.note\n                })\n            }\n        } else {\n            /* Send to publisher website */\n            buttonText = `Purchase (${purchaseInfo.publisher})`\n            purchaseURL = purchaseInfo.link\n        }\n    }\n\n    return (\n        <a href={purchaseURL} target=\"_blank\" rel=\"noreferrer\" onClick={onClick}>\n            <button className=\"purchase-button\">{buttonText}</button>\n        </a>\n    )\n}","/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/Purchase.js",["79"],"import $ from \"jquery\"\nimport React from \"react\"\nimport \"../style/Purchase.css\"\n\nimport Loader from \"../components/Loader\"\n\nexport default class PurchaseModal extends React.Component {\n    state = {}\n\n    hide() {\n        $('.purchase-details').slideUp(() => {\n            this.setState({ item: undefined, approvedEmail: undefined })\n        })\n        $('.modal-container').fadeOut()\n    }\n\n    componentDidUpdate() {\n        if (this.state.item && !this.state.approvedEmail) {\n            $('#paypal-button-container').empty().hide()\n            $('.modal-container').hide().fadeIn()\n            $(\".purchase-details\").hide().slideDown(() => {\n                this.showPayPalButtons(this.state.item.price, '#paypal-button-container')\n                    .then(() => {\n                        $('.loader-container').fadeOut()\n                        $('#paypal-button-container').fadeIn()\n                    })\n            })\n        }\n    }\n\n    /* From PayPal website */\n    showPayPalButtons(price, container) {\n        let purchaseModal = this\n        let buttons = window.paypal.Buttons({\n            style: {\n                shape: 'rect',\n                color: 'gold',\n                layout: 'vertical',\n                label: 'buynow',\n            },\n    \n            createOrder: function(data, actions) {\n                return actions.order.create({\n                    purchase_units: [{\n                        \"amount\":{\n                            \"currency_code\":\"USD\",\n                            \"value\": price\n                        },\n                        \"description\": purchaseModal.state.item.name\n                    }],\n                    application_context: {\n                        brand_name: \"Stephen Karukas\",\n                        shipping_preference: \"NO_SHIPPING\"\n                    }\n                });\n            },\n    \n            onApprove: function(data, actions) {\n                $('.loader-container').fadeIn()\n                $('#paypal-button-container').fadeOut()\n                return actions.order.capture().then(function(details) {\n                    purchaseModal.setState({ approvedEmail: details.payer.email_address })\n                });\n            },\n    \n            onError: function(err) {\n                console.log(err);\n            }\n        })\n        return buttons.render(container)\n    }\n\n    displayItem(item) {\n        this.setState({ item, approvedEmail: undefined })\n    }\n\n    render() {\n        if (!this.state.item) {\n            return null\n        } else {\n            let purchaseDetails;\n\n            if (this.state.approvedEmail) {\n                purchaseDetails = (\n                    <div className=\"approved-email\">\n                        <p>A PDF will be sent to <span className=\"email-address\">{this.state.approvedEmail}</span>.</p>\n                        <p>If this is incorrect, or if you have any questions, contact <a href=\"mailto:stephen.karukas@gmail.com\" className=\"hover-anchor\">stephen.karukas@gmail.com</a></p>\n                    </div>\n                )\n            } else {\n                purchaseDetails = (\n                    <div>\n                        <p><strong>Item:</strong> <em>{this.state.item.name}</em> [PDF Score]</p>\n                        <p><strong>Price:</strong> {\"$\" + this.state.item.price.toFixed(2) + \" USD\"}</p>\n                        {this.state.item.note && (\n                            <p><strong>Note:</strong> <em>{this.state.item.note}</em></p>\n                        )}\n                        \n                        <div id=\"smart-button-container\">\n                            <div style={{textAlign: \"center\"}}>\n                                <div id=\"paypal-button-container\"></div>\n                            </div>\n                            <Loader />\n                        </div>\n                    </div>\n                )\n            }\n\n            return (\n            <div className=\"modal-container\" onClick={() => this.hide()}>\n                <div className=\"purchase-container\" onClick={e => e.stopPropagation()}>\n                    <a className=\"purchase-exit-button\" title=\"Exit\" onClick={() => this.hide()}>\n                        <img className=\"transparent-icon\"\n                            src=\"img/x-icon.png\"\n                            alt=\"Close modal window\">\n                        </img>\n                    </a>\n                    <h2>{this.state.approvedEmail? \"Thanks for your order!\" : \"Purchase PDF\"}</h2>\n                    <div className=\"purchase-details\">{purchaseDetails}</div>\n                </div>\n            </div>\n        )\n        }\n    }\n}","/Users/skarukas/Box Sync/CS/Website/new website/website/src/data/works.js",[],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/data/news.js",["80","81"],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/Loader.js",[],"/Users/skarukas/Box Sync/CS/Website/new website/website/src/components/AudioPlayer.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":16},{"ruleId":"90","severity":1,"message":"91","line":100,"column":17,"nodeType":"92","endLine":100,"endColumn":88},{"ruleId":"90","severity":1,"message":"91","line":116,"column":17,"nodeType":"92","endLine":116,"endColumn":100},{"ruleId":"90","severity":1,"message":"91","line":112,"column":21,"nodeType":"92","endLine":112,"endColumn":98},{"ruleId":"93","severity":1,"message":"94","line":24,"column":25,"nodeType":"92","endLine":24,"endColumn":95},{"ruleId":"93","severity":1,"message":"94","line":25,"column":25,"nodeType":"92","endLine":25,"endColumn":95},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'HomePage' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]